{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../src/components/layout';\nimport Fetch from 'isomorphic-unfetch';\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport public_ip from 'public-ip';\nconst SAD_FACE = `\nhttps://www.nationwidechildrens.org/-/media/nch/giving/images/on-our-sleeves-1010/icons/icon-teasers/w45084_iconcollectionlandingiconteaserimages_facesad.jpg\n`;\n\nconst Index = props => __jsx(Layout, null, __jsx(\"center\", null, __jsx(MDBCol, {\n  className: \"pt-2\"\n}, __jsx(MDBCard, {\n  style: {\n    width: \"auto\"\n  },\n  className: \"stylish-color-dark\"\n}, __jsx(MDBCardImage, {\n  className: \"w-75 img-fluid pt-4 pb-4 px-2\",\n  src: props.data.file_url || SAD_FACE,\n  alt: \"The big sad\",\n  waves: true\n}), __jsx(MDBCardBody, null, __jsx(MDBCardTitle, {\n  className: \"white-text h3\"\n}, props.data.file_name), __jsx(MDBCardText, {\n  className: \"white-text\"\n}, __jsx(\"b\", null, __jsx(\"u\", null, \"Wowe api call\")), __jsx(\"p\", {\n  className: \"green-text\"\n}, _JSON$stringify(props, null, 4))), __jsx(MDBBtn, {\n  href: \"register\"\n}, \"I dont do anything yet,sorta\"))))));\n\nIndex.getInitialProps = async function () {\n  const IP = await public_ip.v4();\n  const API_URL = 'http://' + IP + ':3000/get_image'; //Default data incase Fetch fails. \n\n  let data = {\n    file_url: undefined,\n    file_name: undefined,\n    api_url: API_URL,\n    client_ip: IP\n  };\n  const res = await fetch(API_URL).then(async function (received_data) {\n    console.log(\"Image fetched\");\n    data = await received_data.json();\n  }).catch(function () {\n    console.log(\"Failed to fetch image\");\n  });\n  return {\n    data: data,\n    client_ip: IP\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/nafis_shah/github/Poststorm_Imagery/src/dashboard/web_server/pages/index.js"],"names":["Layout","Fetch","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","public_ip","SAD_FACE","Index","props","width","data","file_url","file_name","getInitialProps","IP","v4","API_URL","undefined","api_url","client_ip","res","fetch","then","received_data","console","log","json","catch"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,EAAuCC,YAAvC,EAAqDC,YAArD,EAAmEC,WAAnE,EAAgFC,MAAhF,QAA8F,UAA9F;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,MAAMC,QAAQ,GAAG;;CAAjB;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAEV,MAAC,MAAD,QACI,sBACI,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAC;AAAlB,GACI,MAAC,OAAD;AAAS,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhB;AAAmC,EAAA,SAAS,EAAC;AAA7C,GACI,MAAC,YAAD;AAAc,EAAA,SAAS,EAAC,+BAAxB;AAAwD,EAAA,GAAG,EAAED,KAAK,CAACE,IAAN,CAAWC,QAAX,IAAuBL,QAApF;AAA8F,EAAA,GAAG,EAAC,aAAlG;AAA+G,EAAA,KAAK;AAApH,EADJ,EAEI,MAAC,WAAD,QACI,MAAC,YAAD;AAAc,EAAA,SAAS,EAAC;AAAxB,GAAyCE,KAAK,CAACE,IAAN,CAAWE,SAApD,CADJ,EAEI,MAAC,WAAD;AAAa,EAAA,SAAS,EAAC;AAAvB,GACI,iBACI,iCADJ,CADJ,EAMI;AAAG,EAAA,SAAS,EAAC;AAAb,GACC,gBAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CADD,CANJ,CAFJ,EAYI,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAC;AAAb,kCAZJ,CAFJ,CADJ,CADJ,CADJ,CAFJ;;AA4BAD,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AAErC,QAAMC,EAAE,GAAE,MAAMT,SAAS,CAACU,EAAV,EAAhB;AACA,QAAMC,OAAO,GAAC,YAAUF,EAAV,GAAa,iBAA3B,CAHqC,CAIrC;;AACA,MAAIJ,IAAI,GAAG;AACPC,IAAAA,QAAQ,EAACM,SADF;AAEPL,IAAAA,SAAS,EAACK,SAFH;AAGPC,IAAAA,OAAO,EAACF,OAHD;AAIPG,IAAAA,SAAS,EAACL;AAJH,GAAX;AAOA,QAAMM,GAAG,GAAG,MAAMC,KAAK,CAACL,OAAD,CAAL,CAAeM,IAAf,CAAoB,gBAAeC,aAAf,EAA8B;AAChEC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAf,IAAAA,IAAI,GAAG,MAAMa,aAAa,CAACG,IAAd,EAAb;AAEH,GAJiB,EAIfC,KAJe,CAIT,YAAW;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,GANiB,CAAlB;AAQA,SAAO;AACHf,IAAAA,IAAI,EAACA,IADF;AAEHS,IAAAA,SAAS,EAACL;AAFP,GAAP;AAIH,CAxBD;;AA0BA,eAAeP,KAAf","sourcesContent":["import Layout from '../src/components/layout'\nimport Fetch from 'isomorphic-unfetch';\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport public_ip from 'public-ip'\n\nconst SAD_FACE =`\nhttps://www.nationwidechildrens.org/-/media/nch/giving/images/on-our-sleeves-1010/icons/icon-teasers/w45084_iconcollectionlandingiconteaserimages_facesad.jpg\n`\n\nconst Index = (props) => (\n    \n    <Layout >\n        <center>\n            <MDBCol className=\"pt-2\">\n                <MDBCard style={{ width: \"auto\" }} className=\"stylish-color-dark\">\n                    <MDBCardImage className=\"w-75 img-fluid pt-4 pb-4 px-2\" src={props.data.file_url || SAD_FACE} alt=\"The big sad\"waves />\n                    <MDBCardBody >\n                        <MDBCardTitle className=\"white-text h3\">{props.data.file_name}</MDBCardTitle>\n                        <MDBCardText className=\"white-text\">\n                            <b>\n                                <u>\n                                    Wowe api call\n                                </u>\n                            </b>\n                            <p className='green-text'>\n                            {JSON.stringify(props, null, 4)}\n                            </p>\n                        </MDBCardText>\n                        <MDBBtn href=\"register\">I dont do anything yet,sorta</MDBBtn>\n                    </MDBCardBody>\n                </MDBCard>\n            </MDBCol>\n        </center> \n    </Layout>\n    \n)\n\nIndex.getInitialProps = async function() {\n    \n    const IP =await public_ip.v4()\n    const API_URL='http://'+IP+':3000/get_image'\n    //Default data incase Fetch fails. \n    let data = {\n        file_url:undefined,\n        file_name:undefined,\n        api_url:API_URL,\n        client_ip:IP\n    }\n\n    const res = await fetch(API_URL).then(async function(received_data) {\n        console.log(\"Image fetched\");\n        data = await received_data.json()\n       \n    }).catch(function() {\n        console.log(\"Failed to fetch image\");\n    });\n      \n    return {\n        data:data,\n        client_ip:IP\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}